service: medical-opinion-platform

provider:
  name: aws
  runtime: nodejs18.x
  region: eu-north-1
  stage: ${opt:stage, 'dev'}
  environment:
    NODE_ENV: production
    JWT_SECRET: medical-buddy-secret-key-2024
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - "arn:aws:dynamodb:${self:provider.region}:*:table/Users"
            - "arn:aws:dynamodb:${self:provider.region}:*:table/Users/index/*"
            - "arn:aws:dynamodb:${self:provider.region}:*:table/Cases"
            - "arn:aws:dynamodb:${self:provider.region}:*:table/Doctors"
            - "arn:aws:dynamodb:${self:provider.region}:*:table/Messages"

package:
  patterns:
    - '!client/**'
    - '!aws-cdk/**'
    - '!.serverless/**'
    - 'server/**'

functions:
  api:
    handler: server/aws-index.handler
    events:
      - http:
          path: /{proxy+}
          method: ANY
          cors: true
      - http:
          path: /
          method: ANY
          cors: true

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Users
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: EmailIndex
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            BillingMode: PAY_PER_REQUEST
        BillingMode: PAY_PER_REQUEST

    CasesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Cases
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    DoctorsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Doctors
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    MessagesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Messages
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

plugins:
  - serverless-offline